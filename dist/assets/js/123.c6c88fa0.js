(window.webpackJsonp=window.webpackJsonp||[]).push([[123],{485:function(e,t,a){"use strict";a.r(t);var v=a(25),_=Object(v.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[a("code",[e._v("table")]),e._v(" 用于表格数据的展示，并且很符合人们的直观认知。")]),e._v(" "),a("h2",{attrs:{id:"table-布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#table-布局"}},[e._v("#")]),e._v(" table 布局")]),e._v(" "),a("p",[e._v("在 "),a("code",[e._v("div")]),e._v("+"),a("code",[e._v("css")]),e._v(" 布局流行之前，普遍使用 "),a("code",[e._v("table")]),e._v(" 进行布局。曾经的神器 Dreamweaver 的可视化拖拽也是基于 "),a("code",[e._v("table")]),e._v(" 布局。")]),e._v(" "),a("p",[a("code",[e._v("table")]),e._v(" 布局的好处在于样式好控制，特别是居中、对齐。缺点在于会多处非常多的 DOM 节点（想想一个 "),a("code",[e._v("td")]),e._v(" 里面再来一个 "),a("code",[e._v("table")]),e._v("），会导致页面加载变慢、不利于 SEO（"),a("code",[e._v("table")]),e._v(" 原本就不是用来布局的）。也因此，在 CSS 成熟之后，"),a("code",[e._v("table")]),e._v(" 布局马上就变成历史了。")]),e._v(" "),a("h2",{attrs:{id:"table-使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#table-使用"}},[e._v("#")]),e._v(" table 使用")]),e._v(" "),a("p",[e._v("单纯使用table进行表格的展示以及复杂性操作还是比较符合其定义的")])])}),[],!1,null,null,null);t.default=_.exports}}]);