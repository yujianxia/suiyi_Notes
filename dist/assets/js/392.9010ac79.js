(window.webpackJsonp=window.webpackJsonp||[]).push([[392],{754:function(e,t,s){"use strict";s.r(t);var r=s(25),a=Object(r.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"概览"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概览"}},[e._v("#")]),e._v(" 概览")]),e._v(" "),s("p",[e._v("TypeScript 编译器源文件位于 "),s("a",{attrs:{href:"https://github.com/Microsoft/TypeScript/tree/master/src/compiler",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("src/compiler")]),s("OutboundLink")],1),e._v(" 目录下")]),e._v(" "),s("blockquote",[s("p",[e._v("译注：Typescript Deep Dive 使用的源码应为 2016 年以前的源码。学习时请对照现有的源码")])]),e._v(" "),s("p",[e._v("它分为以下几个关键部分：")]),e._v(" "),s("ul",[s("li",[e._v("Scanner 扫描器（"),s("code",[e._v("scanner.ts")]),e._v("）")]),e._v(" "),s("li",[e._v("Parser 解析器（"),s("code",[e._v("parser.ts")]),e._v("）")]),e._v(" "),s("li",[e._v("Binder 绑定器（"),s("code",[e._v("binder.ts")]),e._v("）")]),e._v(" "),s("li",[e._v("Checker 检查器（"),s("code",[e._v("checker.ts")]),e._v("）")]),e._v(" "),s("li",[e._v("Emitter 发射器（"),s("code",[e._v("emitter.ts")]),e._v("）")])]),e._v(" "),s("p",[e._v("每个部分在源文件中均有独立文件，本章稍后会对这些部分做解释。")]),e._v(" "),s("h3",{attrs:{id:"byots"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#byots"}},[e._v("#")]),e._v(" BYOTS")]),e._v(" "),s("p",[e._v("我们有个名为 "),s("a",{attrs:{href:"https://github.com/basarat/byots",target:"_blank",rel:"noopener noreferrer"}},[e._v("Bring Your Own TypeScript (BYOTS)"),s("OutboundLink")],1),e._v(" 的项目，通过暴露内部接口让编译器 API 使用起来更简单。你可以在全局范围上暴露你 TypeScript 应用的本地变量。")]),e._v(" "),s("h3",{attrs:{id:"语法和语义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#语法和语义"}},[e._v("#")]),e._v(" 语法和语义")]),e._v(" "),s("p",[s("em",[e._v("语法")]),e._v("正确并不意味着"),s("em",[e._v("语义")]),e._v("上也正确。下面的 TypeScript 代码，语法合法，但是语义却不正确")]),e._v(" "),s("div",{staticClass:"language-ts line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" foo"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("number")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'not a number'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[s("code",[e._v("语义")]),e._v(" 从自然语言角度意味着有意义，理解这个概念对你很有用。")]),e._v(" "),s("h3",{attrs:{id:"处理概览"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#处理概览"}},[e._v("#")]),e._v(" 处理概览")]),e._v(" "),s("p",[e._v("以下演示简单说明 TypeScript 编译器如何将上述几个关键部分组合在一起：")]),e._v(" "),s("div",{staticClass:"language-code line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("SourceCode（源码） ~~ 扫描器 ~~> Token 流\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("div",{staticClass:"language-code line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("Token 流 ~~ 解析器 ~~> AST（抽象语法树）\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("div",{staticClass:"language-code line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("AST ~~ 绑定器 ~~> Symbols（符号）\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("符号（"),s("code",[e._v("Symbol")]),e._v("）是 TypeScript "),s("em",[e._v("语义")]),e._v("系统的主要构造块。如上所示，符号是绑定的结果。符号将 AST 中的声明节点与相同实体的其他声明相连。")]),e._v(" "),s("p",[e._v("符号和 AST 是检查器用来验证源代码"),s("em",[e._v("语义")]),e._v("的")]),e._v(" "),s("div",{staticClass:"language-code line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("AST + 符号 ~~ 检查器 ~~> 类型验证\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("最后，需要输出 JavaScript 时：")]),e._v(" "),s("div",{staticClass:"language-code line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("AST + 检查器 ~~ 发射器 ~~> JavaScript 代码\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("TypeScript 编译器中还有一些其他文件，为我们接下来介绍的很多关键部分提供实用工具。")]),e._v(" "),s("h2",{attrs:{id:"文件-utilities"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文件-utilities"}},[e._v("#")]),e._v(" 文件：Utilities")]),e._v(" "),s("p",[s("code",[e._v("core.ts")]),e._v(" ：TypeScript 编译器使用的核心工具集，重要的有：")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("let objectAllocator: ObjectAllocator")]),e._v(" 是一个定义为全局单例的变量。提供以下定义：\n"),s("ul",[s("li",[s("code",[e._v("getNodeConstructor")]),e._v("（节点会在解析器 / AST 中介绍）")]),e._v(" "),s("li",[s("code",[e._v("getSymbolConstructor")]),e._v("（符号会在绑定器中介绍）")]),e._v(" "),s("li",[s("code",[e._v("getTypeConstructor")]),e._v("（类型会在检查器中介绍）")]),e._v(" "),s("li",[s("code",[e._v("getSignatureConstructor")]),e._v("（签名是索引，调用和构造签名）")])])])]),e._v(" "),s("h2",{attrs:{id:"文件-关键数据结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文件-关键数据结构"}},[e._v("#")]),e._v(" 文件：关键数据结构")]),e._v(" "),s("p",[s("code",[e._v("types.ts")]),e._v(" 包含整个编译器中使用的关键数据结构和接口，这里列出一些关键部分：")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("SyntaxKind")]),e._v("\nAST 节点类型通过 "),s("code",[e._v("SyntaxKind")]),e._v(" 枚举进行识别")]),e._v(" "),s("li",[s("code",[e._v("TypeChecker")]),e._v("\n类型检查器提供此接口")]),e._v(" "),s("li",[s("code",[e._v("CompilerHost")]),e._v("\n用于程序（"),s("code",[e._v("Program")]),e._v("）和系统之间的交互")]),e._v(" "),s("li",[s("code",[e._v("Node")]),e._v("\nAST 节点")])]),e._v(" "),s("h2",{attrs:{id:"文件-系统"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文件-系统"}},[e._v("#")]),e._v(" 文件：系统")]),e._v(" "),s("p",[s("code",[e._v("system.ts")]),e._v("，TypeScript 编译器与操作系统的所有交互均通过 "),s("code",[e._v("System")]),e._v(" 接口进行。接口及其实现（"),s("code",[e._v("WScript")]),e._v(" 和 "),s("code",[e._v("Node")]),e._v("） 均定义在 "),s("code",[e._v("system.ts")]),e._v(" 中。你可以将其视为"),s("em",[e._v("操作环境（OE, Operating Environment）")]),e._v("。")]),e._v(" "),s("p",[e._v("现在对主要文件有一个整体了解了，我们继续介绍程序（"),s("RouterLink",{attrs:{to:"/ts/compiler/program.html"}},[s("code",[e._v("Program")])]),e._v("）的概念")],1)])}),[],!1,null,null,null);t.default=a.exports}}]);