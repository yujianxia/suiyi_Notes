(window.webpackJsonp=window.webpackJsonp||[]).push([[273],{635:function(s,t,a){"use strict";a.r(t);var e=a(25),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"promise"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#promise"}},[s._v("#")]),s._v(" Promise")]),s._v(" "),a("h2",{attrs:{id:"描述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#描述"}},[s._v("#")]),s._v(" 描述")]),s._v(" "),a("p",[s._v("一个 "),a("code",[s._v("Promise")]),s._v(" 对象代表一个在这个 "),a("code",[s._v("promise")]),s._v(" 被创建出来时不一定已知的值。它让您能够把异步操作最终的成功返回值或者失败原因和相应的处理程序关联起来。 这样使得异步方法可以像同步方法那样返回值：异步方法并不会立即返回最终的值，而是会返回一个 "),a("code",[s._v("promise")]),s._v("，以便在未来某个时候把值交给使用者。")]),s._v(" "),a("p",[s._v("一个 "),a("code",[s._v("Promise")]),s._v(" 必然处于以下几种状态之一：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("待定（"),a("code",[s._v("pending")]),s._v("）: 初始状态，既没有被兑现，也没有被拒绝。")])]),s._v(" "),a("li",[a("p",[s._v("已兑现（"),a("code",[s._v("fulfilled")]),s._v("）: 意味着操作成功完成。")])]),s._v(" "),a("li",[a("p",[s._v("已拒绝（"),a("code",[s._v("rejected")]),s._v("）: 意味着操作失败。")])])]),s._v(" "),a("p",[s._v("待定状态的 "),a("code",[s._v("Promise")]),s._v(" 对象要么会通过一个值被兑现（"),a("code",[s._v("fulfilled")]),s._v("），要么会通过一个原因（"),a("code",[s._v("错误")]),s._v("）被拒绝（"),a("code",[s._v("rejected")]),s._v("）。当这些情况之一发生时，用 "),a("code",[s._v("promise")]),s._v(" 的 "),a("code",[s._v("then")]),s._v(" 方法排列起来的相关处理程序就会被调用。如果 "),a("code",[s._v("promise")]),s._v(" 在一个相应的处理程序被绑定时就已经被兑现或被拒绝了，那么这个处理程序就会被调用，因此在完成异步操作和绑定处理方法之间不会存在竞争状态。")]),s._v(" "),a("p",[s._v("因为 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise/then",target:"_blank",rel:"noopener noreferrer"}},[s._v("Promise.prototype.then"),a("OutboundLink")],1),s._v(" 和  "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise/catch",target:"_blank",rel:"noopener noreferrer"}},[s._v("Promise.prototype.catch"),a("OutboundLink")],1),s._v(" 方法返回的是 "),a("code",[s._v("promise")]),s._v("， 所以它们可以被链式调用。")]),s._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"demo",href:"/notes/assets/promises.png"}},[a("img",{attrs:{src:"/notes/assets/promises.png",alt:"demo"}})])]),s._v(" "),a("blockquote",[a("p",[a("strong",[s._v("不要和惰性求值混淆：")]),s._v(' 有一些语言中有惰性求值和延时计算的特性，它们也被称为“promises”，例如 Scheme。JavaScript 中的 promise 代表的是已经正在发生的进程， 而且可以通过回调函数实现链式调用。 如果您想对一个表达式进行惰性求值，就考虑一下使用无参数的"箭头函数":  '),a("code",[s._v("f = () =>表达式")]),s._v(" 来创建惰性求值的表达式，使用 "),a("code",[s._v("f()")]),s._v(" 求值。")])]),s._v(" "),a("blockquote",[a("p",[a("strong",[s._v("注意：")]),s._v(" 如果一个 "),a("code",[s._v("promise")]),s._v(" 已经被兑现（"),a("code",[s._v("fulfilled")]),s._v("）或被拒绝（"),a("code",[s._v("rejected")]),s._v("），那么也可以说它处于已敲定（"),a("code",[s._v("settled")]),s._v("）状态。您还会听到一个经常跟 "),a("code",[s._v("promise")]),s._v(" 一起使用的术语：已决议（"),a("code",[s._v("resolved")]),s._v("），它表示 "),a("code",[s._v("promise")]),s._v(" 已经处于已敲定("),a("code",[s._v("settled")]),s._v(")状态，或者为了匹配另一个 "),a("code",[s._v("promise")]),s._v(' 的状态被"锁定"了。Domenic Denicola 的 '),a("a",{attrs:{href:"https://github.com/domenic/promises-unwrapping/blob/master/docs/states-and-fates.md",target:"_blank",rel:"noopener noreferrer"}},[s._v("States and fates"),a("OutboundLink")],1),s._v(" 中有更多关于 promise 术语的细节可以供您参考。")])]),s._v(" "),a("h2",{attrs:{id:"promise的链式调用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#promise的链式调用"}},[s._v("#")]),s._v(" Promise的链式调用")]),s._v(" "),a("p",[s._v("可以用 "),a("code",[s._v("promise.then()")]),s._v("，"),a("code",[s._v("promise.catch()")]),s._v(" 和 "),a("code",[s._v("promise.finally()")]),s._v(" 这些方法将进一步的操作与一个变为已敲定状态的 "),a("code",[s._v("promise")]),s._v(" 关联起来。这些方法还会返回一个新生成的 "),a("code",[s._v("promise")]),s._v(" 对象，这个对象可以被非强制性的用来做链式调用，就像这样：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" myPromise "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("myExecutorFunc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("handleFulfilledA"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("handleRejectedA"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("handleFulfilledB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("handleRejectedB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("handleFulfilledC"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("handleRejectedC"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 或者，这样可能会更好...")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" myPromise "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("myExecutorFunc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("handleFulfilledA"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("handleFulfilledB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("handleFulfilledC"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("catch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("handleRejectedAny"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[s._v("过早地处理被拒绝的 "),a("code",[s._v("promise")]),s._v(" 会对之后 "),a("code",[s._v("promise")]),s._v(" 的链式调用造成影响。不过有时候因为需要马上处理一个错误也只能这样做。（有关应对影响的技巧，请参见下面示例中的 "),a("code",[s._v("throw -999")]),s._v(" ）另一方面，在没有迫切需要的情况下，可以在最后一个.catch() 语句时再进行错误处理，这种做法更加简单。")]),s._v(" "),a("p",[s._v('这两个函数的签名很简单，它们只接受一个任意类型的参数。这些函数由您（编程者）编写。这些函数的终止状态决定着链式调用中下一个promise的"已敲定 （'),a("code",[s._v("settled")]),s._v('）"状态是什么。任何不是 '),a("code",[s._v("throw")]),s._v(' 的终止都会创建一个"已决议（'),a("code",[s._v("resolved")]),s._v('）"状态，而以 '),a("code",[s._v("throw")]),s._v(' 终止则会创建一个"已拒绝"状态。')]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("handleFulfilled")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*...*/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" nextValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("handleRejection")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("reason")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*...*/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throw")]),s._v("  nextReason"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("handleRejection")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("reason")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*...*/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" nextValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("被返回的 "),a("code",[s._v("nextValue")]),s._v(" 可能是另一个"),a("code",[s._v("promise")]),s._v("对象，这种情况下这个"),a("code",[s._v("promise")]),s._v("会被动态地插入链式调用。")]),s._v(" "),a("p",[s._v("当 "),a("code",[s._v(".then()")]),s._v(" 中缺少能够返回 "),a("code",[s._v("promise")]),s._v(" 对象的函数时，链式调用就直接继续进行下一环操作。因此，链式调用可以在最后一个 "),a("code",[s._v(".catch()")]),s._v(" 之前把所有的 "),a("code",[s._v("handleRejection")]),s._v(" 都省略掉。类似地， "),a("code",[s._v(".catch()")]),s._v(" 其实只是没有给 "),a("code",[s._v("handleFulfilled")]),s._v(" 预留参数位置的 "),a("code",[s._v(".then()")]),s._v(" 而已。")]),s._v(" "),a("p",[s._v("链式调用中的 "),a("code",[s._v("promise")]),s._v(" 们就像俄罗斯套娃一样，是嵌套起来的，但又像是一个栈，每个都必须从顶端被弹出。链式调用中的第一个 "),a("code",[s._v("promise")]),s._v(" 是嵌套最深的一个，也将是第一个被弹出的。")]),s._v(" "),a("blockquote",[a("p",[s._v("(promise D, (promise C, (promise B, (promise A) ) ) )")])]),s._v(" "),a("p",[s._v("当存在一个 "),a("code",[s._v("nextValue")]),s._v(" 是 "),a("code",[s._v("promise")]),s._v(" 时，就会出现一种动态的替换效果。"),a("code",[s._v("return")]),s._v(" 会导致一个 "),a("code",[s._v("promise")]),s._v(" 被弹出，但这个 "),a("code",[s._v("nextValue")]),s._v(" promise 则会被推入被弹出 "),a("code",[s._v("promise")]),s._v(' 原来的位置。对于上面所示的嵌套场景，假设与 "promise B" 相关的 '),a("code",[s._v(".then()")]),s._v(' 返回了一个值为 "promise X" 的 '),a("code",[s._v("nextValue")]),s._v(" 。那么嵌套的结果看起来就会是这样：")]),s._v(" "),a("blockquote",[a("p",[s._v("(promise D, (promise C, (promise X) ) )")])]),s._v(" "),a("p",[s._v("一个 "),a("code",[s._v("promise")]),s._v(" 可能会参与不止一次的嵌套。对于下面的代码，"),a("code",[s._v("promiseA")]),s._v(' 向"已敲定"（"'),a("code",[s._v("settled")]),s._v('"）状态的过渡会导致两个实例的 '),a("code",[s._v(".then")]),s._v(" 都被调用。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" promiseA "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("myExecutorFunc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" promiseB "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" promiseA"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("handleFulfilled1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" handleRejected1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" promiseC "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" promiseA"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("handleFulfilled2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" handleRejected2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v('一个已经处于"已敲定"（"'),a("code",[s._v("settled")]),s._v('"）状态的 '),a("code",[s._v("promise")]),s._v(" 也可以接收操作。在那种情况下，（如果没有问题的话，）这个操作会被作为第一个异步操作被执行。注意，所有的 "),a("code",[s._v("promise")]),s._v(' 都一定是异步的。因此，一个已经处于"已敲定"（"'),a("code",[s._v("settled")]),s._v('"）状态的 '),a("code",[s._v("promise")]),s._v(" 中的操作只有 "),a("code",[s._v("promise")]),s._v(" 链式调用的栈被清空了和一个事件循环过去了之后才会被执行。这种效果跟 "),a("code",[s._v("setTimeout(action, 10)")]),s._v(" 特别相似。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" promiseA "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("resolutionFunc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("rejectionFunc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("resolutionFunc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("777")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// 这时，"promiseA" 已经被敲定了。')]),s._v("\npromiseA"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("val")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"asynchronous logging has val:"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"immediate logging"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// produces output in this order:")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// immediate logging")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// asynchronous logging has val: 777")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h2",{attrs:{id:"构造函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构造函数"}},[s._v("#")]),s._v(" 构造函数")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise/Promise",target:"_blank",rel:"noopener noreferrer"}},[a("code",[s._v("Promise()")]),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("创建一个新的 "),a("code",[s._v("Promise")]),s._v(" 对象。该构造函数主要用于包装还没有添加 "),a("code",[s._v("promise")]),s._v(" 支持的函数。")]),s._v(" "),a("h2",{attrs:{id:"静态方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#静态方法"}},[s._v("#")]),s._v(" 静态方法")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise/all",target:"_blank",rel:"noopener noreferrer"}},[a("code",[s._v("Promise.all(iterable)")]),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("这个方法返回一个新的"),a("code",[s._v("promise")]),s._v("对象，该"),a("code",[s._v("promise")]),s._v("对象在"),a("code",[s._v("iterable")]),s._v("参数对象里所有的"),a("code",[s._v("promise")]),s._v("对象都成功的时候才会触发成功，一旦有任何一个"),a("code",[s._v("iterable")]),s._v("里面的"),a("code",[s._v("promise")]),s._v("对象失败则立即触发该"),a("code",[s._v("promise")]),s._v("对象的失败。这个新的"),a("code",[s._v("promise")]),s._v("对象在触发成功状态以后，会把一个包含"),a("code",[s._v("iterable")]),s._v("里所有"),a("code",[s._v("promise")]),s._v("返回值的数组作为成功回调的返回值，顺序跟"),a("code",[s._v("iterable")]),s._v("的顺序保持一致；如果这个新的"),a("code",[s._v("promise")]),s._v("对象触发了失败状态，它会把"),a("code",[s._v("iterable")]),s._v("里第一个触发失败的"),a("code",[s._v("promise")]),s._v("对象的错误信息作为它的失败错误信息。"),a("code",[s._v("Promise.all")]),s._v("方法常被用于处理多个"),a("code",[s._v("promise")]),s._v("对象的状态集合。（可以参考"),a("code",[s._v("jQuery.when")]),s._v("方法---译者注）")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise/allSettled",target:"_blank",rel:"noopener noreferrer"}},[a("code",[s._v("Promise.allSettled(iterable)")]),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("等到所有"),a("code",[s._v("promises")]),s._v("都已敲定（"),a("code",[s._v("settled")]),s._v("）（每个"),a("code",[s._v("promise")]),s._v("都已兑现（"),a("code",[s._v("fulfilled")]),s._v("）或已拒绝（"),a("code",[s._v("rejected")]),s._v("））。\n返回一个"),a("code",[s._v("promise")]),s._v("，该"),a("code",[s._v("promise")]),s._v("在所有"),a("code",[s._v("promise")]),s._v("完成后完成。并带有一个对象数组，每个对象对应每个"),a("code",[s._v("promise")]),s._v("的结果。")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise/any",target:"_blank",rel:"noopener noreferrer"}},[a("code",[s._v("Promise.any(iterable)")]),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("接收一个"),a("code",[s._v("Promise")]),s._v("对象的集合，当其中的一个 "),a("code",[s._v("promise")]),s._v(" 成功，就返回那个成功的"),a("code",[s._v("promise")]),s._v("的值。")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise/race",target:"_blank",rel:"noopener noreferrer"}},[a("code",[s._v("Promise.race(iterable)")]),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("当"),a("code",[s._v("iterable")]),s._v("参数里的任意一个子"),a("code",[s._v("promise")]),s._v("被成功或失败后，父"),a("code",[s._v("promise")]),s._v("马上也会用子"),a("code",[s._v("promise")]),s._v("的成功返回值或失败详情作为参数调用父"),a("code",[s._v("promise")]),s._v("绑定的相应句柄，并返回该"),a("code",[s._v("promise")]),s._v("对象。")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise/reject",target:"_blank",rel:"noopener noreferrer"}},[a("code",[s._v("Promise.reject(reason)")]),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("返回一个状态为失败的"),a("code",[s._v("Promise")]),s._v("对象，并将给定的失败信息传递给对应的处理方法")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise/resolve",target:"_blank",rel:"noopener noreferrer"}},[a("code",[s._v("Promise.resolve(value)")]),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("返回一个状态由给定"),a("code",[s._v("value")]),s._v("决定的"),a("code",[s._v("Promise")]),s._v("对象。如果该值是"),a("code",[s._v("thenable")]),s._v("(即，带有"),a("code",[s._v("then")]),s._v("方法的对象)，返回的"),a("code",[s._v("Promise")]),s._v("对象的最终状态由"),a("code",[s._v("then")]),s._v("方法执行决定；否则的话(该"),a("code",[s._v("value")]),s._v("为空，基本类型或者不带"),a("code",[s._v("then")]),s._v("方法的对象),返回的"),a("code",[s._v("Promise")]),s._v("对象状态为"),a("code",[s._v("fulfilled")]),s._v("，并且将该"),a("code",[s._v("value")]),s._v("传递给对应的"),a("code",[s._v("then")]),s._v("方法。通常而言，如果您不知道一个值是否是"),a("code",[s._v("Promise")]),s._v("对象，使用"),a("code",[s._v("Promise.resolve(value)")]),s._v(" 来返回一个"),a("code",[s._v("Promise")]),s._v("对象,这样就能将该"),a("code",[s._v("value")]),s._v("以"),a("code",[s._v("Promise")]),s._v("对象形式使用。")]),s._v(" "),a("h1",{attrs:{id:"promise-原型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#promise-原型"}},[s._v("#")]),s._v(" Promise 原型")]),s._v(" "),a("h2",{attrs:{id:"属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[s._v("#")]),s._v(" 属性")]),s._v(" "),a("p",[a("code",[s._v("Promise.prototype.constructor")])]),s._v(" "),a("p",[s._v("返回被创建的实例函数.  默认为 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise",target:"_blank",rel:"noopener noreferrer"}},[s._v("Promise"),a("OutboundLink")],1),s._v(" 函数.")]),s._v(" "),a("h2",{attrs:{id:"方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[s._v("#")]),s._v(" 方法")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise/catch",target:"_blank",rel:"noopener noreferrer"}},[a("code",[s._v("Promise.prototype.catch(onRejected)")]),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("添加一个拒绝("),a("code",[s._v("rejection")]),s._v(") 回调到当前 "),a("code",[s._v("promise")]),s._v(", 返回一个新的"),a("code",[s._v("promise")]),s._v("。当这个回调函数被调用，新 "),a("code",[s._v("promise")]),s._v(" 将以它的返回值来"),a("code",[s._v("resolve")]),s._v("，否则如果当前"),a("code",[s._v("promise")]),s._v(" 进入"),a("code",[s._v("fulfilled")]),s._v("状态，则以当前"),a("code",[s._v("promise")]),s._v("的完成结果作为新"),a("code",[s._v("promise")]),s._v("的完成结果.")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise/then",target:"_blank",rel:"noopener noreferrer"}},[a("code",[s._v("Promise.prototype.then(onFulfilled, onRejected)")]),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("添加解决("),a("code",[s._v("fulfillment")]),s._v(")和拒绝("),a("code",[s._v("rejection")]),s._v(")回调到当前 "),a("code",[s._v("promise")]),s._v(", 返回一个新的 "),a("code",[s._v("promise")]),s._v(", 将以回调的返回值来"),a("code",[s._v("resolve")]),s._v(".")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise/finally",target:"_blank",rel:"noopener noreferrer"}},[a("code",[s._v("Promise.prototype.finally(onFinally)")]),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("添加一个事件处理回调于当前"),a("code",[s._v("promise")]),s._v("对象，并且在原"),a("code",[s._v("promise")]),s._v("对象解析完毕后，返回一个新的"),a("code",[s._v("promise")]),s._v("对象。回调会在当前"),a("code",[s._v("promise")]),s._v("运行完毕后被调用，无论当前"),a("code",[s._v("promise")]),s._v("的状态是完成("),a("code",[s._v("fulfilled")]),s._v(")还是失败("),a("code",[s._v("rejected")]),s._v(")")]),s._v(" "),a("h1",{attrs:{id:"创建promise"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建promise"}},[s._v("#")]),s._v(" 创建Promise")]),s._v(" "),a("p",[a("code",[s._v("Promise")]),s._v(" 对象是由关键字 "),a("code",[s._v("new")]),s._v(" 及其构造函数来创建的。该构造函数会把一个叫做“处理器函数”（"),a("code",[s._v("executor function")]),s._v("）的函数作为它的参数。这个“处理器函数”接受两个函数——"),a("code",[s._v("resolve")]),s._v(" 和 "),a("code",[s._v("reject")]),s._v(" ——作为其参数。当异步任务顺利完成且返回结果值时，会调用 "),a("code",[s._v("resolve")]),s._v(" "),a("code",[s._v("函数；而当异步任务失败且返回失败原因（通常是一个错误对象）时，会调用reject")]),s._v(" 函数。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" myFirstPromise "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("resolve"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" reject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ?做一些异步操作，最终会调用下面两者之一:")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//   resolve(someValue); // fulfilled")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ?或")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//   reject("failure reason"); // rejected')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("想要某个函数拥有"),a("code",[s._v("promise")]),s._v("功能，只需让其返回一个"),a("code",[s._v("promise")]),s._v("即可。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("myAsyncFunction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("resolve"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" reject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" xhr "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("XMLHttpRequest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"GET"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("onload")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("responseText"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("onerror")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("reject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("statusText"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("send")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h1",{attrs:{id:"示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[s._v("#")]),s._v(" 示例")]),s._v(" "),a("h2",{attrs:{id:"基础示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础示例"}},[s._v("#")]),s._v(" 基础示例")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" myFirstPromise "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("resolve"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" reject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//当异步代码执行成功时，才会调用resolve(...), 当异步代码失败时就会调用reject(...)")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//在本例中，使用setTimeout(...)来模拟异步代码，实际编码时可能是XHR请求或是HTML5的一些API方法.")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"成功!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//代码正常执行！")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("250")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nmyFirstPromise"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("successMessage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//successMessage的值是上面调用resolve(...)方法传入的值.")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//successMessage参数不一定非要是字符串类型，这里只是举个例子")]),s._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Yay! "')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" successMessage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h2",{attrs:{id:"高级示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#高级示例"}},[s._v("#")]),s._v(" 高级示例")]),s._v(" "),a("p",[s._v("本例展示了 "),a("code",[s._v("Promise")]),s._v(" 的一些机制。 "),a("code",[s._v("testPromise()")]),s._v(" 方法在每次点击 "),a("code",[s._v("<button>")]),s._v(" 按钮时被调用，该方法会创建一个"),a("code",[s._v("promise")]),s._v(" 对象，使用 "),a("code",[s._v("window.setTimeout()")]),s._v(" 让"),a("code",[s._v("Promise")]),s._v("等待 1-3 秒不等的时间来填充数据（通过"),a("code",[s._v("Math.random()")]),s._v("方法）。")]),s._v(" "),a("p",[a("code",[s._v("Promise")]),s._v(" 的值的填充过程都被日志记录（"),a("code",[s._v("logged")]),s._v("）下来，这些日志信息展示了方法中的同步代码和异步代码是如何通过"),a("code",[s._v("Promise")]),s._v("完成解耦的。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'use strict'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" promiseCount "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("testPromise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" thisPromiseCount "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("promiseCount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" log "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'log'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("insertAdjacentHTML")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'beforeend'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" thisPromiseCount "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("') 开始 (<small>同步代码开始</small>)<br/>'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 新构建一个 Promise 实例：使用Promise实现每过一段时间给计数器加一的过程，每段时间间隔为1~3秒不等")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" p1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// resolver 函数在 Promise 成功或失败时都可能被调用")]),s._v("\n       "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("resolve"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" reject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("insertAdjacentHTML")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'beforeend'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" thisPromiseCount "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("') Promise 开始 (<small>异步代码开始</small>)<br/>'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建一个异步调用")]),s._v("\n            window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 填充 Promise")]),s._v("\n                    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("thisPromiseCount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("random")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Promise 不论成功或失败都会调用 then")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// catch() 只有当 promise 失败时才会调用")]),s._v("\n    p1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 记录填充值")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("val")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("insertAdjacentHTML")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'beforeend'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" val "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("') Promise 已填充完毕 (<small>异步代码结束</small>)<br/>'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("catch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 记录失败原因")]),s._v("\n       "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("reason")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'处理失败的 promise ('")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("reason"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("')'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("insertAdjacentHTML")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'beforeend'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" thisPromiseCount "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("') Promise made (<small>同步代码结束</small>)<br/>'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br")])])])}),[],!1,null,null,null);t.default=n.exports}}]);