(window.webpackJsonp=window.webpackJsonp||[]).push([[132],{494:function(e,o,t){"use strict";t.r(o);var n=t(25),r=Object(n.a)({},(function(){var e=this,o=e.$createElement,t=e._self._c||o;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[t("code",[e._v("Shadow DOM")]),e._v(" 可以想象成在 Vue 或者 React 中使用的一个个组件，是一种将 HTML 结构、Style 封装起来的结构。熟悉的 "),t("code",[e._v("<video>")]),e._v(" 标签，其实就是 "),t("code",[e._v("Shadow DOM")]),e._v(" 的封装")]),e._v(" "),t("p",[e._v("可以看到 "),t("code",[e._v("Shadow DOM")]),e._v(" 允许在 DOM 文档中插入一个 DOM 的子树。"),t("code",[e._v("Shadow Tree")]),e._v(" 会挂在 "),t("code",[e._v("Shadow host")]),e._v(" 对应的 DOM 上。之后，"),t("code",[e._v("Shadow DOM")]),e._v(" 与外层 DOM 不会相互影响，因此可以放心用来做组件。")]),e._v(" "),t("p",[e._v("具体的例子可以参考 MDN 给出的案例"),t("code",[e._v("<popup-info-box>")])]),e._v(" "),t("p",[e._v("这个例子告诉可以利用 Shadow DOM 封装自己的 tag 标签，并且可以在网页中使用。")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/Web_Components/Using_shadow_DOM",target:"_blank",rel:"noopener noreferrer"}},[e._v("mdn使用 shadow DOM"),t("OutboundLink")],1),e._v(" "),t("a",{attrs:{href:"https://aotu.io/notes/2016/06/24/Shadow-DOM/index.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("凹凸实验室对于Shadow DOM的解读"),t("OutboundLink")],1)])])}),[],!1,null,null,null);o.default=r.exports}}]);