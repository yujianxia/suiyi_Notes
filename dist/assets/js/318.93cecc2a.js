(window.webpackJsonp=window.webpackJsonp||[]).push([[318],{678:function(t,v,_){"use strict";_.r(v);var e=_(25),l=Object(e.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("p",[t._v("在react 15 极其以前的版本中,组件内的UI异常将中断组件内部状态，导致下一次渲染时触发隐藏异常。React并未提供友好的异常捕获和处理方式，一旦发生异常，应用将不能很好的运行。而React 16版本有所改进。")]),t._v(" "),_("p",[t._v("组件内异常，也就是异常边界组件能够捕获的异常，主要包括：")]),t._v(" "),_("ul",[_("li",[t._v("1、渲染过程中异常；")]),t._v(" "),_("li",[t._v("2、生命周期方法中的异常；")]),t._v(" "),_("li",[t._v("3、子组件树中各组件的constructor构造函数中异常。")])]),t._v(" "),_("p",[t._v("当然异常边界也有一些无法捕获的异常，主要是异步及服务端触发异常：")]),t._v(" "),_("ul",[_("li",[t._v("1、事件处理器中的异常；")]),t._v(" "),_("li",[t._v("2、异步任务异常，如setTiemout，ajax请求异常等；")]),t._v(" "),_("li",[t._v("3、服务端渲染异常；")]),t._v(" "),_("li",[t._v("4、异常边界组件自身内的异常；")])]),t._v(" "),_("p",[t._v("使用 ts 可以有效减少因为适用类型导致的错误")])])}),[],!1,null,null,null);v.default=l.exports}}]);