(window.webpackJsonp=window.webpackJsonp||[]).push([[128],{490:function(v,_,e){"use strict";e.r(_);var c=e(25),o=Object(c.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("p",[v._v("js 放在 "),e("code",[v._v("<head>")]),v._v(" 中，如果不添加 "),e("code",[v._v("async")]),v._v(" 或者 "),e("code",[v._v("defer")]),v._v(" 时，当浏览器遇到 "),e("code",[v._v("script")]),v._v(" 时，会阻塞 DOM 树的构建，进而影响页面的加载。当 js 文件较多时，页面白屏的时间也会变长。")]),v._v(" "),e("blockquote",[e("p",[v._v("在这个过程中，如果解析器遇到了一个脚本("),e("code",[v._v("script")]),v._v(")，它就会停下来，并且执行这个脚本，然后才会继续解析 HTML。如果遇到了一个引用外部资源的脚本("),e("code",[v._v("script")]),v._v(")，它就必须停下来等待这个脚本资源的下载，而这个行为会导致一个或者多个的网络往返，并且会延迟页面的首次渲染时间。")])]),v._v(" "),e("p",[v._v("把 js 放到 "),e("code",[v._v("<body>")]),v._v(" 里（一般在 "),e("code",[v._v("</body>")]),v._v(" 的上面）时，由于 DOM 时顺序解析的，因此 js 不会阻塞 DOM 的解析。对于必须要在 DOM 解析前就要加载的 js，需要放在 "),e("code",[v._v("<head>")]),v._v(" 中。")]),v._v(" "),e("p",[v._v("说到 "),e("code",[v._v("<script>")]),v._v(" 标签，那么它是具有两个属性的。"),e("code",[v._v("async")]),v._v(" 异步加载 和 "),e("code",[v._v("defer")]),v._v(" 延迟加载。")]),v._v(" "),e("p",[e("strong",[e("code",[v._v("<script>")])])]),v._v(" "),e("p",[v._v("当 "),e("code",[v._v("script")]),v._v(" 标签 放在 "),e("code",[v._v("head")]),v._v(" 中，并且这个 "),e("code",[v._v("script")]),v._v(" 标签只有 "),e("code",[v._v("src")]),v._v(" 属性引入外部 js 文件的情况下，html 文件开始渲染，直到命中 "),e("code",[v._v("script")]),v._v(" 标签，此时解析将停止，并发出一个请求获取该文件并执行。执行结束之后继续渲染 html 标签。")]),v._v(" "),e("p",[e("strong",[e("code",[v._v("<script async>")])])]),v._v(" "),e("p",[v._v("使用 "),e("code",[v._v("async")]),v._v(" 会在 html 解析期间下载文件，并在下载完成后暂停 html 的解析，执行下载的外部 js 文件。直接后继续解析 html")]),v._v(" "),e("p",[e("strong",[e("code",[v._v("<script defer>")])])]),v._v(" "),e("p",[v._v("它和 "),e("code",[v._v("async")]),v._v(" 的区别是，同样在 html 解析期间下载外部的 js 文件，但是下载完成后不会立即执行 js 脚本文件，而是等到 html 解析完成后才执行它。 即在 "),e("code",[v._v("DOMContentLoaded")]),v._v(" 之间执行已下载的 外部 js 文件。")]),v._v(" "),e("p",[e("strong",[v._v("使用 "),e("code",[v._v("async")]),v._v(" 或 "),e("code",[v._v("defer")])])]),v._v(" "),e("ul",[e("li",[e("p",[v._v("如果 "),e("code",[v._v("script")]),v._v(" 是模块化，并且不依赖于任何脚本，那么使用 "),e("code",[v._v("async")])])]),v._v(" "),e("li",[e("p",[v._v("如果脚本依赖于或者被另一个脚本依赖，那么使用"),e("code",[v._v("defe")])])])])])}),[],!1,null,null,null);_.default=o.exports}}]);