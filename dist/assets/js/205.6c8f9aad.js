(window.webpackJsonp=window.webpackJsonp||[]).push([[205],{604:function(t,e,v){"use strict";v.r(e);var a=v(25),_=Object(a.a)({},(function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"第27天-说说你对arguments的理解-它是数组吗"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第27天-说说你对arguments的理解-它是数组吗"}},[t._v("#")]),t._v(" 第27天 说说你对arguments的理解，它是数组吗？")]),t._v(" "),v("h2",{attrs:{id:"思路一"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#思路一"}},[t._v("#")]),t._v(" 思路一")]),t._v(" "),v("p",[v("code",[t._v("arguments")]),t._v("是一个对象。")]),t._v(" "),v("p",[t._v("js不能像java一样实现重载，"),v("code",[t._v("arguments")]),t._v("对象可以模拟重载。")]),t._v(" "),v("p",[t._v("js中每个函数都会有"),v("code",[t._v("arguments")]),t._v('这个实例，它引用着函数的实参，可以用数组下标的方式"[]"引用'),v("code",[t._v("arguments")]),t._v("的元素。"),v("code",[t._v("arguments.length")]),t._v("为函数实参个数，"),v("code",[t._v("arguments.callee")]),t._v("引用函数自身。")]),t._v(" "),v("p",[t._v("arguments他的特性和使用方法")]),t._v(" "),v("p",[t._v("特性：")]),t._v(" "),v("p",[t._v("1.arguments对象和Function是分不开的。")]),t._v(" "),v("p",[t._v("2.因为arguments这个对象不能显式创建。")]),t._v(" "),v("p",[t._v("3.arguments对象只有函数开始时才可用。")]),t._v(" "),v("p",[t._v("使用方法：")]),t._v(" "),v("p",[t._v("虽然arguments对象并不是一个数组，但是访问单个参数的方式与访问数组元素的方式相同")]),t._v(" "),v("p",[t._v("例如：")]),t._v(" "),v("p",[t._v("arguments[0],arguments[1]...")]),t._v(" "),v("h2",{attrs:{id:"总结"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),v("ol",[v("li",[v("p",[t._v("实参列表,是类数组,不是数组")])]),t._v(" "),v("li",[v("p",[t._v("是传入参数的一个镜像(浅拷贝)")])]),t._v(" "),v("li",[v("p",[v("code",[t._v("arguments.callee")]),t._v("是函数本身, 严格模式禁用"),v("code",[t._v("arguments.callee")])])])])])}),[],!1,null,null,null);e.default=_.exports}}]);