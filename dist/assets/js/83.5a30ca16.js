(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{445:function(e,t,r){"use strict";r.r(t);var a=r(25),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"before-和-after-中双冒号和单冒号"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#before-和-after-中双冒号和单冒号"}},[e._v("#")]),e._v(" :before 和:after 中双冒号和单冒号")]),e._v(" "),r("h2",{attrs:{id:"相关知识点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#相关知识点"}},[e._v("#")]),e._v(" 相关知识点：")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("单冒号（:）用于CSS3伪类，双冒号（::）用于CSS3伪元素。（伪元素由双冒号和伪元素名称组成）")])]),e._v(" "),r("li",[r("p",[e._v("双冒号是在当前规范中引入的，用于区分伪类和伪元素。不过浏览器需要同时支持旧的已经存在的伪元素写法，")])])]),e._v(" "),r("p",[e._v("比如:first-line、:first-letter、:before、:after等，")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("而新的在CSS3中引入的伪元素则不允许再支持旧的单冒号的写法。")])]),e._v(" "),r("li",[r("p",[e._v("想让插入的内容出现在其它内容前，使用::before，否者，使用::after；")])]),e._v(" "),r("li",[r("p",[e._v("在代码顺序上，::after生成的内容也比::before生成的内容靠后。")])]),e._v(" "),r("li",[r("p",[e._v("如果按堆栈视角，::after生成的内容会在::before生成的内容之上。")])])]),e._v(" "),r("h2",{attrs:{id:"回答"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#回答"}},[e._v("#")]),e._v(" 回答：")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("在css3中使用单冒号来表示伪类，用双冒号来表示伪元素。但是为了兼容已有的伪元素的写法，在一些浏览器中也可以使用单冒号来表示伪元素。")])]),e._v(" "),r("li",[r("p",[e._v("伪类一般匹配的是元素的一些特殊状态，如hover、link等，而伪元素一般匹配的特殊的位置，比如after、before等。")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);