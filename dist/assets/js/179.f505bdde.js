(window.webpackJsonp=window.webpackJsonp||[]).push([[179],{541:function(e,t,s){"use strict";s.r(t);var a=s(25),o=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:""}},[s("a",{staticClass:"header-anchor",attrs:{href:"#"}},[e._v("#")])]),e._v(" "),s("h1",{attrs:{id:"一、简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、简介"}},[e._v("#")]),e._v(" 一、简介")]),e._v(" "),s("hr"),e._v(" "),s("p",[e._v("CORS需要浏览器和服务器同时支持。目前，所有浏览器都支持该功能，IE浏览器不能低于IE10。")]),e._v(" "),s("p",[e._v("整个CORS通信过程，都是浏览器自动完成，不需要用户参与。对于开发者来说，CORS通信与同源的AJAX通信没有差别，代码完全一样。浏览器一旦发现AJAX请求跨源，就会自动添加一些附加的头信息，有时还会多出一次附加的请求，但用户不会有感觉。")]),e._v(" "),s("p",[e._v("因此，实现CORS通信的关键是服务器。只要服务器实现了CORS接口，就可以跨源通信。")]),e._v(" "),s("h1",{attrs:{id:"二、两种请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、两种请求"}},[e._v("#")]),e._v(" 二、两种请求")]),e._v(" "),s("hr"),e._v(" "),s("p",[e._v("浏览器将CORS请求分成两类：简单请求（simple request）和非简单请求（not-so-simple request）。")]),e._v(" "),s("p",[e._v("只要同时满足以下两大条件，就属于简单请求。")]),e._v(" "),s("p",[e._v("（1) 请求方法是以下三种方法之一：")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("HEAD")])]),e._v(" "),s("li",[s("p",[e._v("GET")])]),e._v(" "),s("li",[s("p",[e._v("POST")])])]),e._v(" "),s("p",[e._v("（2）HTTP的头信息不超出以下几种字段：")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("Accept")])]),e._v(" "),s("li",[s("p",[e._v("Accept-Language")])]),e._v(" "),s("li",[s("p",[e._v("Content-Language")])]),e._v(" "),s("li",[s("p",[e._v("Last-Event-ID")])]),e._v(" "),s("li",[s("p",[e._v("Content-Type：只限于三个值application/x-www-form-urlencoded、multipart/form-data、text/plain")])])]),e._v(" "),s("p",[e._v("这是为了兼容表单（form），因为历史上表单一直可以发出跨域请求。AJAX 的跨域设计就是，只要表单可以发，AJAX 就可以直接发。")]),e._v(" "),s("p",[e._v("凡是不同时满足上面两个条件，就属于非简单请求。")]),e._v(" "),s("p",[e._v("浏览器对这两种请求的处理，是不一样的。")]),e._v(" "),s("h1",{attrs:{id:"三、简单请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、简单请求"}},[e._v("#")]),e._v(" 三、简单请求")]),e._v(" "),s("hr"),e._v(" "),s("h2",{attrs:{id:"_3-1-基本流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-基本流程"}},[e._v("#")]),e._v(" 3.1 基本流程")]),e._v(" "),s("hr"),e._v(" "),s("p",[e._v("对于简单请求，浏览器直接发出CORS请求。具体来说，就是在头信息之中，增加一个"),s("code",[e._v("Origin")]),e._v("字段。")]),e._v(" "),s("p",[e._v("下面是一个例子，浏览器发现这次跨源AJAX请求是简单请求，就自动在头信息之中，添加一个"),s("code",[e._v("Origin")]),e._v("字段。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("GET /cors HTTP/1.1\nOrigin: http://api.bob.com\nHost: api.alice.com\nAccept-Language: en-US\nConnection: keep-alive\nUser-Agent: Mozilla/5.0...\n")])])]),s("p",[e._v("上面的头信息中，"),s("code",[e._v("Origin")]),e._v("字段用来说明，本次请求来自哪个源（协议 + 域名 + 端口）。服务器根据这个值，决定是否同意这次请求。")]),e._v(" "),s("p",[e._v("如果"),s("code",[e._v("Origin")]),e._v("指定的源，不在许可范围内，服务器会返回一个正常的HTTP回应。浏览器发现，这个回应的头信息没有包含"),s("code",[e._v("Access-Control-Allow-Origin")]),e._v("字段（详见下文），就知道出错了，从而抛出一个错误，被"),s("code",[e._v("XMLHttpRequest")]),e._v("的"),s("code",[e._v("onerror")]),e._v("回调函数捕获。注意，这种错误无法通过状态码识别，因为HTTP回应的状态码有可能是200。")]),e._v(" "),s("p",[e._v("如"),s("code",[e._v("果Origin")]),e._v("指定的域名在许可范围内，服务器返回的响应，会多出几个头信息字段。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("Access-Control-Allow-Origin: http://api.bob.com\nAccess-Control-Allow-Credentials: true\nAccess-Control-Expose-Headers: FooBar\nContent-Type: text/html; charset=utf-8\n")])])]),s("p",[e._v("上面的头信息之中，有三个与CORS请求相关的字段，都以"),s("code",[e._v("Access-Control-")]),e._v("开头。")]),e._v(" "),s("p",[s("strong",[e._v("（1）Access-Control-Allow-Origin")])]),e._v(" "),s("p",[e._v("该字段是必须的。它的值要么是请求时"),s("code",[e._v("Origin")]),e._v("字段的值，要么是一个"),s("code",[e._v("*")]),e._v("，表示接受任意域名的请求。")]),e._v(" "),s("p",[s("strong",[e._v("（2）Access-Control-Allow-Credentials")])]),e._v(" "),s("p",[e._v("该字段可选。它的值是一个布尔值，表示是否允许发送Cookie。默认情况下，Cookie不包括在CORS请求之中。设为"),s("code",[e._v("true")]),e._v("，即表示服务器明确许可，Cookie可以包含在请求中，一起发给服务器。这个值也只能设为"),s("code",[e._v("true")]),e._v("，如果服务器不要浏览器发送Cookie，删除该字段即可。")]),e._v(" "),s("p",[s("strong",[e._v("（3）Access-Control-Expose-Headers")])]),e._v(" "),s("p",[e._v("该字段可选。CORS请求时，"),s("code",[e._v("XMLHttpRequest")]),e._v("对象的"),s("code",[e._v("getResponseHeader()")]),e._v("方法只能拿到6个基本字段："),s("code",[e._v("Cache-Control")]),e._v("、"),s("code",[e._v("Content-Language")]),e._v("、"),s("code",[e._v("Content-Type")]),e._v("、"),s("code",[e._v("Expires")]),e._v("、"),s("code",[e._v("Last-Modified")]),e._v("、"),s("code",[e._v("Pragma")]),e._v("。如果想拿到其他字段，就必须在"),s("code",[e._v("Access-Control-Expose-Headers")]),e._v("里面指定。上面的例子指定，"),s("code",[e._v("getResponseHeader('FooBar')")]),e._v("可以返回"),s("code",[e._v("FooBar")]),e._v("字段的值。")]),e._v(" "),s("h2",{attrs:{id:"_3-2-withcredentials-属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-withcredentials-属性"}},[e._v("#")]),e._v(" 3.2 withCredentials 属性")]),e._v(" "),s("hr"),e._v(" "),s("p",[e._v("上面说到，CORS请求默认不发送Cookie和HTTP认证信息。如果要把Cookie发到服务器，一方面要服务器同意，指定"),s("code",[e._v("Access-Control-Allow-Credentials")]),e._v("字段。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("Access-Control-Allow-Credentials: true\n")])])]),s("p",[e._v("另一方面，开发者必须在AJAX请求中打开"),s("code",[e._v("withCredentials")]),e._v("属性。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("var xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n")])])]),s("p",[e._v("否则，即使服务器同意发送Cookie，浏览器也不会发送。或者，服务器要求设置Cookie，浏览器也不会处理。")]),e._v(" "),s("p",[e._v("但是，如果省略"),s("code",[e._v("withCredentials")]),e._v("设置，有的浏览器还是会一起发送Cookie。这时，可以显式关闭"),s("code",[e._v("withCredentials")]),e._v("。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("xhr.withCredentials = false;\n")])])]),s("p",[e._v("需要注意的是，如果要发送Cookie，"),s("code",[e._v("Access-Control-Allow-Origin")]),e._v("就不能设为星号，必须指定明确的、与请求网页一致的域名。同时，Cookie依然遵循同源政策，只有用服务器域名设置的Cookie才会上传，其他域名的Cookie并不会上传，且（跨源）原网页代码中的"),s("code",[e._v("document.cookie")]),e._v("也无法读取服务器域名下的Cookie。")]),e._v(" "),s("h1",{attrs:{id:"四、非简单请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、非简单请求"}},[e._v("#")]),e._v(" 四、非简单请求")]),e._v(" "),s("hr"),e._v(" "),s("h2",{attrs:{id:"_4-1-预检请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-预检请求"}},[e._v("#")]),e._v(" 4.1 预检请求")]),e._v(" "),s("hr"),e._v(" "),s("p",[e._v("非简单请求是那种对服务器有特殊要求的请求，比如请求方法是"),s("code",[e._v("PUT")]),e._v("或"),s("code",[e._v("DELETE")]),e._v("，或者"),s("code",[e._v("Content-Type")]),e._v("字段的类型是"),s("code",[e._v("application/json")]),e._v("。")]),e._v(" "),s("p",[e._v('非简单请求的CORS请求，会在正式通信之前，增加一次HTTP查询请求，称为"预检"请求（preflight）。')]),e._v(" "),s("p",[e._v("浏览器先询问服务器，当前网页所在的域名是否在服务器的许可名单之中，以及可以使用哪些HTTP动词和头信息字段。只有得到肯定答复，浏览器才会发出正式的"),s("code",[e._v("XMLHttpRequest")]),e._v("请求，否则就报错。")]),e._v(" "),s("p",[e._v("下面是一段浏览器的JavaScript脚本。")]),e._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" url "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'http://api.alice.com/cors'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" xhr "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("XMLHttpRequest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\nxhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("open")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'PUT'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\nxhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("setRequestHeader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'X-Custom-Header'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'value'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\nxhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br")])]),s("p",[e._v("上面代码中，HTTP请求的方法是"),s("code",[e._v("PUT")]),e._v("，并且发送一个自定义头信息"),s("code",[e._v("X-Custom-Header")]),e._v("。")]),e._v(" "),s("p",[e._v('浏览器发现，这是一个非简单请求，就自动发出一个"预检"请求，要求服务器确认可以这样请求。下面是这个"预检"请求的HTTP头信息。')]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("OPTIONS /cors HTTP/1.1\nOrigin: http://api.bob.com\nAccess-Control-Request-Method: PUT\nAccess-Control-Request-Headers: X-Custom-Header\nHost: api.alice.com\nAccept-Language: en-US\nConnection: keep-alive\nUser-Agent: Mozilla/5.0...\n")])])]),s("p",[e._v('"预检"请求用的请求方法是'),s("code",[e._v("OPTIONS")]),e._v("，表示这个请求是用来询问的。头信息里面，关键字段是"),s("code",[e._v("Origin")]),e._v("，表示请求来自哪个源。")]),e._v(" "),s("p",[e._v("除了"),s("code",[e._v("Origin")]),e._v('字段，"预检"请求的头信息包括两个特殊字段。')]),e._v(" "),s("p",[s("strong",[e._v("（1）Access-Control-Request-Method")])]),e._v(" "),s("p",[e._v("该字段是必须的，用来列出浏览器的CORS请求会用到哪些HTTP方法，上例是"),s("code",[e._v("PUT")]),e._v("。")]),e._v(" "),s("p",[s("strong",[e._v("（2）Access-Control-Request-Headers")])]),e._v(" "),s("p",[e._v("该字段是一个逗号分隔的字符串，指定浏览器CORS请求会额外发送的头信息字段，上例是"),s("code",[e._v("X-Custom-Header")]),e._v("。")]),e._v(" "),s("h2",{attrs:{id:"_4-2-预检请求的回应"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-预检请求的回应"}},[e._v("#")]),e._v(" 4.2 预检请求的回应")]),e._v(" "),s("hr"),e._v(" "),s("p",[e._v('服务器收到"预检"请求以后，检查了'),s("code",[e._v("Origin")]),e._v("、"),s("code",[e._v("Access-Control-Request-Method")]),e._v("和"),s("code",[e._v("Access-Control-Request-Headers")]),e._v("字段以后，确认允许跨源请求，就可以做出回应。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("HTTP/1.1 200 OK\nDate: Mon, 01 Dec 2008 01:15:39 GMT\nServer: Apache/2.0.61 (Unix)\nAccess-Control-Allow-Origin: http://api.bob.com\nAccess-Control-Allow-Methods: GET, POST, PUT\nAccess-Control-Allow-Headers: X-Custom-Header\nContent-Type: text/html; charset=utf-8\nContent-Encoding: gzip\nContent-Length: 0\nKeep-Alive: timeout=2, max=100\nConnection: Keep-Alive\nContent-Type: text/plain\n")])])]),s("p",[e._v("上面的HTTP回应中，关键的是"),s("code",[e._v("Access-Control-Allow-Origin")]),e._v("字段，表示"),s("code",[e._v("http://api.bob.com")]),e._v("可以请求数据。该字段也可以设为星号，表示同意任意跨源请求。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("Access-Control-Allow-Origin: *\n")])])]),s("p",[e._v('如果服务器否定了"预检"请求，会返回一个正常的HTTP回应，但是没有任何CORS相关的头信息字段。这时，浏览器就会认定，服务器不同意预检请求，因此触发一个错误，被'),s("code",[e._v("XMLHttpRequest")]),e._v("对象的"),s("code",[e._v("onerror")]),e._v("回调函数捕获。控制台会打印出如下的报错信息。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("XMLHttpRequest cannot load http://api.alice.com.\nOrigin http://api.bob.com is not allowed by Access-Control-Allow-Origin.\n")])])]),s("p",[e._v("服务器回应的其他CORS相关字段如下。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("Access-Control-Allow-Methods: GET, POST, PUT\nAccess-Control-Allow-Headers: X-Custom-Header\nAccess-Control-Allow-Credentials: true\nAccess-Control-Max-Age: 1728000\n")])])]),s("p",[s("strong",[e._v("（1）Access-Control-Allow-Methods")])]),e._v(" "),s("p",[e._v('该字段必需，它的值是逗号分隔的一个字符串，表明服务器支持的所有跨域请求的方法。注意，返回的是所有支持的方法，而不单是浏览器请求的那个方法。这是为了避免多次"预检"请求。')]),e._v(" "),s("p",[s("strong",[e._v("（2）Access-Control-Allow-Headers")])]),e._v(" "),s("p",[e._v("如果浏览器请求包括"),s("code",[e._v("Access-Control-Request-Headers")]),e._v("字段，则"),s("code",[e._v("Access-Control-Allow-Headers")]),e._v('字段是必需的。它也是一个逗号分隔的字符串，表明服务器支持的所有头信息字段，不限于浏览器在"预检"中请求的字段。')]),e._v(" "),s("p",[s("strong",[e._v("（3）Access-Control-Allow-Credentials")])]),e._v(" "),s("p",[e._v("该字段与简单请求时的含义相同。")]),e._v(" "),s("p",[s("strong",[e._v("（4）Access-Control-Max-Age")])]),e._v(" "),s("p",[e._v("该字段可选，用来指定本次预检请求的有效期，单位为秒。上面结果中，有效期是20天（1728000秒），即允许缓存该条回应1728000秒（即20天），在此期间，不用发出另一条预检请求。")]),e._v(" "),s("h2",{attrs:{id:"_4-3-浏览器的正常请求和回应"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-浏览器的正常请求和回应"}},[e._v("#")]),e._v(" 4.3 浏览器的正常请求和回应")]),e._v(" "),s("hr"),e._v(" "),s("p",[e._v('一旦服务器通过了"预检"请求，以后每次浏览器正常的CORS请求，就都跟简单请求一样，会有一个'),s("code",[e._v("Origin")]),e._v("头信息字段。服务器的回应，也都会有一个"),s("code",[e._v("Access-Control-Allow-Origin")]),e._v("头信息字段。")]),e._v(" "),s("p",[e._v('下面是"预检"请求之后，浏览器的正常CORS请求。')]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("PUT /cors HTTP/1.1\nOrigin: http://api.bob.com\nHost: api.alice.com\nX-Custom-Header: value\nAccept-Language: en-US\nConnection: keep-alive\nUser-Agent: Mozilla/5.0...\n")])])]),s("p",[e._v("上面头信息的"),s("code",[e._v("Origin")]),e._v("字段是浏览器自动添加的。")]),e._v(" "),s("p",[e._v("下面是服务器正常的回应。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("Access-Control-Allow-Origin: http://api.bob.com\nContent-Type: text/html; charset=utf-8\n")])])]),s("p",[e._v("上面头信息中，"),s("code",[e._v("Access-Control-Allow-Origin")]),e._v("字段是每次回应都必定包含的。")]),e._v(" "),s("h1",{attrs:{id:"五、与jsonp的比较"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#五、与jsonp的比较"}},[e._v("#")]),e._v(" 五、与JSONP的比较")]),e._v(" "),s("hr"),e._v(" "),s("p",[e._v("CORS与JSONP的使用目的相同，但是比JSONP更强大。")]),e._v(" "),s("p",[e._v("JSONP只支持"),s("code",[e._v("GET")]),e._v("请求，CORS支持所有类型的HTTP请求。JSONP的优势在于支持老式浏览器，以及可以向不支持CORS的网站请求数据。")])])}),[],!1,null,null,null);t.default=o.exports}}]);