(window.webpackJsonp=window.webpackJsonp||[]).push([[135],{497:function(t,s,a){"use strict";a.r(s);var n=a(25),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("BOM是Browser Object Model的缩写，即浏览器对象模型。DOM是Document Object Model的缩写，即文档对象模型。他们都是浏览器提供给JavaScript的API接口。")]),t._v(" "),a("h2",{attrs:{id:"bom指-浏览器对象模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bom指-浏览器对象模型"}},[t._v("#")]),t._v(" BOM指 浏览器对象模型")]),t._v(" "),a("p",[t._v("Browser Object Model 的缩写。即浏览器对象模型，这并没有一套规定标准，每个浏览器都有自己的实现。但事实上在大部分主要的功能上都已经形成默契。\n提供了独立于内容而与浏览器窗口进行交互的对象。描述了与浏览器进行交互的方法和接口，可以对浏览器窗口进行访问和操作，譬如可以弹出新的窗口，改变状态栏中的文本。")]),t._v(" "),a("h2",{attrs:{id:"常用的bom属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用的bom属性"}},[t._v("#")]),t._v(" "),a("strong",[t._v("常用的Bom属性")])]),t._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"示例",href:"/notes/assets/html/2020102414322631.png"}},[a("img",{attrs:{src:"/notes/assets/html/2020102414322631.png",alt:"示例"}})])]),t._v(" "),a("p",[a("strong",[t._v("navigator（浏览器对象）")])]),t._v(" "),a("ol",[a("li",[t._v("如何检测浏览器的类型 (ua的问题)？")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如何检测是否为Chrome浏览器")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" ua "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" navigator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("userAgent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ua"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" isChrome "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("ua"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Chrome'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("isChrome"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true为是，false为不是")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[a("a",{attrs:{"data-fancybox":"",title:"示例",href:"/notes/assets/html/2020102414370328.png"}},[a("img",{attrs:{src:"/notes/assets/html/2020102414370328.png",alt:"示例"}})])]),t._v(" "),a("p",[a("strong",[t._v("screen（屏幕对象）")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("screen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//屏幕宽度")]),t._v("\nscreen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("height"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//屏幕高度")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[a("strong",[t._v("location (地址对象)")])]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("location.href")]),t._v("-- 返回或设置当前文档的URL")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("location.search")]),t._v(" -- 返回URL中的查询字符串部分。例如 http://www.dreamdu.com/dreamdu.php?id=5&name=dreamdu 返回包括(?)后面的内容?id=5&name=dreamdu")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("location.hash")]),t._v(" -- 返回URL#后面的内容，如果没有#，返回空")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("location.host")]),t._v(" -- 返回URL中的域名部分，例如www.dreamdu.com")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("location.hostname")]),t._v(" -- 返回URL中的主域名部分，例如dreamdu.com")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("location.pathname")]),t._v(" -- 返回URL的域名后的部分。例如 http://www.dreamdu.com/xhtml/ 返回/xhtml/")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("location.port")]),t._v(" -- 返回URL中的端口部分。例如 http://www.dreamdu.com:8080/xhtml/ 返回8080")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("location.protocol")]),t._v(" -- 返回URL中的协议部分。例如 http://www.dreamdu.com:8080/xhtml/ 返回(//)前面的内容http:")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("location.assign")]),t._v(" -- 设置当前文档的URL")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("location.replace()")]),t._v(" -- 设置当前文档的URL，并且在history对象的地址列表中移除这个URL location.replace(url);")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("location.reload()")]),t._v(" -- 重载当前页面")])])]),t._v(" "),a("p",[a("strong",[t._v("history(历史对象）")])]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("history.go()")]),t._v(" //前进或后退指定的页面数 history.go(num);")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("history.back()")]),t._v("// 后退一页")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("history.forward()")]),t._v(" // 前进一页")])])]),t._v(" "),a("h2",{attrs:{id:"dom指-文档对象模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dom指-文档对象模型"}},[t._v("#")]),t._v(" DOM指 文档对象模型")]),t._v(" "),a("p",[t._v("Document Object Model 的缩写。即文档对象模型，遵循 W3C 制定的标准。其本质就是 DOM 元素。\nDOM 是针对 HTML 的基于树的 API。描述了处理网页内容的方法和接口，是 HTML 的API，DOM 把整个页面规划成由节点层级构成的文档。")]),t._v(" "),a("p",[t._v("注意: 只有 JS 的宿主环境是浏览器的时候才有 DOM 和 BOM ，在 Node 中是没有这两个对象的。")]),t._v(" "),a("h2",{attrs:{id:"dom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dom"}},[t._v("#")]),t._v(" "),a("strong",[t._v("DOM")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("JavaScript操作网页的接口，全称为“文档对象模型(Document Object Model)。 有这几个概念：文档、元素、节点")])]),t._v(" "),a("li",[a("p",[t._v("整个文档是一个文档节点")])]),t._v(" "),a("li",[a("p",[t._v("每个标签是一个元素节点")])]),t._v(" "),a("li",[a("p",[t._v("包含在元素中的文本是文本节点")])]),t._v(" "),a("li",[a("p",[t._v("元素上的属性是属性节点")])]),t._v(" "),a("li",[a("p",[t._v("文档中的注释是注释节点")])])]),t._v(" "),a("h2",{attrs:{id:"dom本质-dom树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dom本质-dom树"}},[t._v("#")]),t._v(" "),a("strong",[t._v("DOM本质 DOM树：")])]),t._v(" "),a("blockquote",[a("p",[t._v("DOM树是结构，树是由DOM元素和属性节点组成的，DOM的本质是把html结构化成js可以识别的树模型；")]),t._v(" "),a("p",[t._v("有了树模型，就有了层级结构，层级结构是指元素和元素之间的关系父子，兄弟。")])]),t._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"示例",href:"/notes/assets/html/20201024140711640.png"}},[a("img",{attrs:{src:"/notes/assets/html/20201024140711640.png",alt:"示例"}})])]),t._v(" "),a("h2",{attrs:{id:"dom-节点操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dom-节点操作"}},[t._v("#")]),t._v(" "),a("strong",[t._v("DOM 节点操作")])]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("新增节点")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("查询子节点")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("查询父节点")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("删除节点")])])])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1. 创建新节点  （document调用）\n\ncreateDocumentFragment() //创建一个DOM片段\ncreateElement() //创建一个具体的元素\ncreateTextNode() //创建一个文本节点\n\n2. 添加、移除、替换、插入  （父元素调用）\n\nappendChild() //添加\nremoveChild() //移除\nreplaceChild() //替换\ninsertBefore() //插入\n\n3. 查找 （document调用）\n\ngetElementsByTagName() //通过标签名称 一组元素\ngetElementsByName() //通过元素的Name属性的值 一组元素\ngetElementById() //通过元素Id，唯一性单个元素\ngetElementByClassName()//通过c元素lass获取  一组元素\nqurySelectorAll('选择器') // 通过选择器获取一组元素\nquerySelector(\"选择器\") // 通过选择器获取单个元素\n\n4. 关系  （元素调用前三个父元素调用 ）\n\nchildNodes // 获取所有的子节点\nchildren  // 获取所有的子元素节点 (常用)\nfirstElementChild   获取第一个元素\nlastElementChild  获取最后一个元素\nparentNode\t获取当前节点的父节点\npreviousElementSibling\t获取当前节点的前一个兄弟元素\nnextElementSibling 获取当前节点的后一个兄弟元素\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br")])]),a("h2",{attrs:{id:"dom节点的attribute和property区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dom节点的attribute和property区别"}},[t._v("#")]),t._v(" "),a("strong",[t._v("Dom节点的Attribute和Property区别")])]),t._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"示例",href:"/notes/assets/html/20201024141424441.png"}},[a("img",{attrs:{src:"/notes/assets/html/20201024141424441.png",alt:"示例"}})])]),t._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"示例",href:"/notes/assets/html/20201024141451942.png"}},[a("img",{attrs:{src:"/notes/assets/html/20201024141451942.png",alt:"示例"}})])]),t._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"示例",href:"/notes/assets/html/20201024141514206.png"}},[a("img",{attrs:{src:"/notes/assets/html/20201024141514206.png",alt:"示例"}})])]),t._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"示例",href:"/notes/assets/html/20201024141631577.png"}},[a("img",{attrs:{src:"/notes/assets/html/20201024141631577.png",alt:"示例"}})])]),t._v(" "),a("p",[t._v("优化流程")]),t._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"示例",href:"/notes/assets/html/20201024141702164.png"}},[a("img",{attrs:{src:"/notes/assets/html/20201024141702164.png",alt:"示例"}})])])])}),[],!1,null,null,null);s.default=e.exports}}]);