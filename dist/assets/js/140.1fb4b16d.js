(window.webpackJsonp=window.webpackJsonp||[]).push([[140],{502:function(o,v,_){"use strict";_.r(v);var e=_(25),s=Object(e.a)({},(function(){var o=this,v=o.$createElement,_=o._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":o.$parent.slotKey}},[_("p",[o._v("因为"),_("code",[o._v("http")]),o._v("是一种无状态请求，默认情况下第一次请求和下一次没什么关系，这种无状态的的好处是快速。")]),o._v(" "),_("p",[_("code",[o._v("cookie")]),o._v("是一种基于客户端（浏览器）的会话技术")]),o._v(" "),_("p",[o._v("特点：")]),o._v(" "),_("ul",[_("li",[o._v("cookie存储数据在客户端浏览器。")]),o._v(" "),_("li",[o._v("浏览器对于单个cookie的大小有限制(4kb) ，对同一个域名下的总cookie数量也有限制(20个)。")])]),o._v(" "),_("p",[o._v("作用：")]),o._v(" "),_("ul",[_("li",[o._v("cookie一般用于存出少量的不太敏感的数据。")]),o._v(" "),_("li",[o._v("在不登录的情况下，完成服务器对客户端的身份识别。")])]),o._v(" "),_("p",[_("code",[o._v("session")]),o._v("是服务端的会话技术，在一次会话的多次请求间共享数据，"),_("code",[o._v("Session")]),o._v("是保存在服务端的，有一个唯一标识，在服务端保存"),_("code",[o._v("Session")]),o._v("的方法很多，可以通过内存、数据库、文件都有，集群的时候也要考虑"),_("code",[o._v("Session")]),o._v("的转移，在大型的网站，一般会有专门的"),_("code",[o._v("Session")]),o._v("服务器集群。")]),o._v(" "),_("p",[o._v("特点：")]),o._v(" "),_("ul",[_("li",[o._v("session用于存储一次会话的多次请求的数据，存在服务器端。")]),o._v(" "),_("li",[o._v("session可以存储任意类型，任意大小的数据。")])]),o._v(" "),_("p",[o._v("区别session与Cookie：")]),o._v(" "),_("ul",[_("li",[o._v("session存储数据在服务器端，Cookie在客户端。")]),o._v(" "),_("li",[o._v("session没有数据大小限制，Cookie有。")]),o._v(" "),_("li",[o._v("session数据安全，Cookie相对于不安全")])])])}),[],!1,null,null,null);v.default=s.exports}}]);