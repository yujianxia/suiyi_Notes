(window.webpackJsonp=window.webpackJsonp||[]).push([[181],{576:function(t,s,a){"use strict";a.r(s);var n=a(25),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"第一套js综合基础面试题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一套js综合基础面试题"}},[t._v("#")]),t._v(" 第一套js综合基础面试题")]),t._v(" "),a("h2",{attrs:{id:"_1-原型-构造函数-实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-原型-构造函数-实例"}},[t._v("#")]),t._v(" "),a("strong",[t._v("1. 原型 / 构造函数 / 实例")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("原型("),a("code",[t._v("prototype")]),t._v("): 一个简单的对象，用于实现对象的 "),a("strong",[t._v("属性继承")]),t._v("。可以简单的理解成对象的爹。在 Firefox 和 Chrome 中，每个"),a("code",[t._v("JavaScript")]),t._v("对象中都包含一个"),a("code",[t._v("__proto__")]),t._v(" (非标准)的属性指向它爹(该对象的原型)，可"),a("code",[t._v("obj.__proto__")]),t._v("进行访问。")])]),t._v(" "),a("li",[a("p",[t._v("构造函数: 可以通过"),a("code",[t._v("new")]),t._v("来 "),a("strong",[t._v("新建一个对象")]),t._v(" 的函数。")])]),t._v(" "),a("li",[a("p",[t._v("实例: 通过构造函数和"),a("code",[t._v("new")]),t._v("创建出来的对象，便是实例。 "),a("strong",[t._v("实例通过")]),a("code",[t._v("__proto__")]),a("strong",[t._v("指向原型，通过")]),a("code",[t._v("constructor")]),a("strong",[t._v("指向构造函数")]),t._v("。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("注意: 其实实例上并不是真正有 "),a("code",[t._v("constructor")]),t._v(" 这个指针，它其实是从原型链上获取的")])])])]),t._v(" "),a("p",[t._v("以"),a("code",[t._v("Object")]),t._v("为例，常用的"),a("code",[t._v("Object")]),t._v("便是一个构造函数，因此可以通过它构建实例。")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 实例")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" instance "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("则此时， "),a("strong",[t._v("实例为")]),a("code",[t._v("instance")]),t._v(", "),a("strong",[t._v("构造函数为")]),a("code",[t._v("Object")]),t._v("，知道，构造函数拥有一个"),a("code",[t._v("prototype")]),t._v("的属性指向原型，因此原型为:")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 原型")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" prototype "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("三者的关系:")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("实例"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" 原型\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("原型")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" 构造函数\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("构造函数")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" 原型\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这条线其实是是基于原型进行获取的，可以理解成一条基于原型的映射线")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 例如: ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// const o = new Object()")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// o.constructor === Object   --\x3e true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// o.__proto__ = null;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// o.constructor === Object   --\x3e false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注意: 其实实例上并不是真正有 constructor 这个指针，它其实是从原型链上获取的")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//      instance.hasOwnProperty('constructor') === false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("实例")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" 构造函数\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br")])]),a("p",[a("a",{attrs:{"data-fancybox":"",title:"原型示例图",href:"/notes/assets/168e9d9b940c4c6f.png"}},[a("img",{attrs:{src:"/notes/assets/168e9d9b940c4c6f.png",alt:"原型示例图"}})])]),t._v(" "),a("h2",{attrs:{id:"_2-原型链"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-原型链"}},[t._v("#")]),t._v(" "),a("strong",[t._v("2.原型链：")])]),t._v(" "),a("p",[a("strong",[t._v("原型链是由原型对象组成")]),t._v("，每个对象都有 "),a("code",[t._v("__proto__")]),t._v(" 属性，指向了创建该对象的构造函数的原型，"),a("code",[t._v("__proto__")]),t._v(" 将对象连接起来组成了原型链。是一个用来"),a("strong",[t._v("实现继承和共享属性")]),t._v("的有限的对象链。")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("属性查找机制")]),t._v(": 当查找对象的属性时，如果实例对象自身不存在该属性，则沿着原型链往上一级查找，找到时则输出，不存在时，则继续沿着原型链往上一级查找，直至最顶级的原型对象"),a("code",[t._v("Object.prototype")]),t._v("，如还是没找到，则输出 "),a("code",[t._v("undefined")]),t._v("；")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("属性修改机制")]),t._v(": 只会修改实例对象本身的属性，如果不存在，则进行添加该属性，如果需要修改原型的属性时，则可以用: "),a("code",[t._v("b.prototype.x = 2")]),t._v("；但是这样会造成所有继承于该对象的实例的属性发生改变。")])])]),t._v(" "),a("h2",{attrs:{id:"_3-执行上下文-ec"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-执行上下文-ec"}},[t._v("#")]),t._v(" "),a("strong",[t._v("3. 执行上下文(EC)")])]),t._v(" "),a("p",[t._v("执行上下文可以简单理解为一个对象:")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("它包含三个部分:")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("变量对象(VO)")])]),t._v(" "),a("li",[a("p",[t._v("作用域链(词法作用域)")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("this")]),t._v("指向")])])])]),t._v(" "),a("li",[a("p",[t._v("它的类型:")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("全局执行上下文")])]),t._v(" "),a("li",[a("p",[t._v("函数执行上下文")])]),t._v(" "),a("li",[a("p",[t._v("eval执行上下文")])])])]),t._v(" "),a("li",[a("p",[t._v("代码执行过程:")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("创建 "),a("strong",[t._v("全局上下文 (global EC)")])])]),t._v(" "),a("li",[a("p",[t._v("全局执行上下文 (caller) 逐行 "),a("strong",[t._v("自上而下")]),t._v(" 执行。遇到函数时，"),a("strong",[t._v("函数执行上下文 (callee)")]),t._v(" 被"),a("code",[t._v("push")]),t._v("到执行栈顶层")])]),t._v(" "),a("li",[a("p",[t._v("函数执行上下文被激活，成为 "),a("code",[t._v("active EC")]),t._v(", 开始执行函数中的代码，"),a("code",[t._v("caller")]),t._v(" 被挂起")])]),t._v(" "),a("li",[a("p",[t._v("函数执行完后，"),a("code",[t._v("callee")]),t._v(" 被"),a("code",[t._v("pop")]),t._v("移除出执行栈，控制权交还"),a("strong",[t._v("全局上下文 (caller)")]),t._v("，继续执行")])])])])]),t._v(" "),a("h2",{attrs:{id:"_4-变量对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-变量对象"}},[t._v("#")]),t._v(" "),a("strong",[t._v("4.变量对象")])]),t._v(" "),a("p",[t._v("变量对象，是执行上下文中的一部分，可以抽象为一种 "),a("strong",[t._v("数据作用域")]),t._v("，其实也可以理解为就是一个简单的对象，它存储着该执行上下文中的所有 "),a("strong",[t._v("变量和函数声明(不包含函数表达式)")]),t._v("。")]),t._v(" "),a("blockquote",[a("p",[t._v("活动对象 (AO): 当变量对象所处的上下文为 active EC 时，称为活动对象。")])]),t._v(" "),a("h2",{attrs:{id:"_5-作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-作用域"}},[t._v("#")]),t._v(" "),a("strong",[t._v("5. 作用域")])]),t._v(" "),a("p",[t._v("执行上下文中还包含作用域链。理解作用域之前，先介绍下作用域。作用域其实可理解为该上下文中声明的 "),a("strong",[t._v("变量和声明的作用范围")]),t._v("。可分为 "),a("strong",[t._v("块级作用域")]),t._v(" 和 "),a("strong",[t._v("函数作用域")])]),t._v(" "),a("p",[t._v("特性:")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("声明提前")]),t._v(": 一个声明在函数体内都是可见的, 函数优先于变量")])]),t._v(" "),a("li",[a("p",[t._v("非匿名自执行函数，函数变量为 "),a("strong",[t._v("只读")]),t._v(" 状态，无法修改")])])]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("foo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 由于foo在函数中只为可读，因此赋值无效")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 结果打印：  ƒ foo() { foo = 10 ; console.log(foo) }")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h2",{attrs:{id:"_6-作用域链"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-作用域链"}},[t._v("#")]),t._v(" "),a("strong",[t._v("6.作用域链")])]),t._v(" "),a("p",[t._v("可以在执行上下文中访问到父级甚至全局的变量，这便是作用域链的功劳。作用域链可以理解为一组对象列表，包含 "),a("strong",[t._v("父级和自身的变量对象")]),t._v("，因此便能通过作用域链访问到父级里声明的变量或者函数。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("由两部分组成:")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("[[scope]]")]),t._v("属性: 指向父级变量对象和作用域链，也就是包含了父级的"),a("code",[t._v("[[scope]]")]),t._v("和"),a("code",[t._v("AO")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("AO")]),t._v(": 自身活动对象")])])])])]),t._v(" "),a("p",[t._v("如此 "),a("code",[t._v("[[scopr]]")]),t._v("包含"),a("code",[t._v("[[scope]]")]),t._v("，便自上而下形成一条 "),a("strong",[t._v("链式作用域")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"_7-闭包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-闭包"}},[t._v("#")]),t._v(" "),a("strong",[t._v("7. 闭包")])]),t._v(" "),a("p",[t._v("闭包属于一种特殊的作用域，称为 "),a("strong",[t._v("静态作用域")]),t._v("。它的定义可以理解为: "),a("strong",[t._v("父函数被销毁")]),t._v(" 的情况下，返回出的子函数的"),a("code",[t._v("[[scope]]")]),t._v("中仍然保留着父级的单变量对象和作用域链，因此可以继续访问到父级的变量对象，这样的函数称为闭包。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("闭包会产生一个很经典的问题:")]),t._v(" "),a("ul",[a("li",[t._v("多个子函数的"),a("code",[t._v("[[scope]]")]),t._v("都是同时指向父级，是完全共享的。因此当父级的变量对象被修改时，所有子函数都受到影响。")])])]),t._v(" "),a("li",[a("p",[t._v("解决:")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("变量可以通过 "),a("strong",[t._v("函数参数的形式")]),t._v(" 传入，避免使用默认的"),a("code",[t._v("[[scope]]")]),t._v("向上查找")])]),t._v(" "),a("li",[a("p",[t._v("使用"),a("code",[t._v("setTimeout")]),t._v("包裹，通过第三个参数传入")])]),t._v(" "),a("li",[a("p",[t._v("使用 "),a("strong",[t._v("块级作用域")]),t._v("，让变量成为自己上下文的属性，避免共享")])])])])]),t._v(" "),a("h2",{attrs:{id:"_8-script-引入方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-script-引入方式"}},[t._v("#")]),t._v(" "),a("strong",[t._v("8.script 引入方式：")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("html 静态"),a("code",[t._v("<script>")]),t._v("引入")])]),t._v(" "),a("li",[a("p",[t._v("js 动态插入"),a("code",[t._v("<script>")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("<script defer>")]),t._v(": 延迟加载，元素解析完成后执行")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("<script async>")]),t._v(": 异步加载，但执行时会阻塞元素渲染")])])]),t._v(" "),a("h2",{attrs:{id:"_9-对象的拷贝"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-对象的拷贝"}},[t._v("#")]),t._v(" "),a("strong",[t._v("9.对象的拷贝")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("浅拷贝: 以赋值的形式拷贝引用对象，仍指向同一个地址，"),a("strong",[t._v("修改时原对象也会受到影响")])]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("Object.assign")])])]),t._v(" "),a("li",[a("p",[t._v("展开运算符(...)")])])])]),t._v(" "),a("li",[a("p",[t._v("深拷贝: 完全拷贝一个新对象，"),a("strong",[t._v("修改时原对象不再受到任何影响")])]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("JSON.parse(JSON.stringify(obj))")]),t._v(": 性能最快")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("具有循环引用的对象时，报错")])]),t._v(" "),a("li",[a("p",[t._v("当值为函数、"),a("code",[t._v("undefined")]),t._v("、或"),a("code",[t._v("symbol")]),t._v("时，无法拷贝")])])])]),t._v(" "),a("li",[a("p",[t._v("递归进行逐一赋值")])])])])]),t._v(" "),a("h2",{attrs:{id:"_10-new运算符的执行过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-new运算符的执行过程"}},[t._v("#")]),t._v(" "),a("strong",[t._v("10.new运算符的执行过程")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("新生成一个对象")])]),t._v(" "),a("li",[a("p",[t._v("链接到原型: "),a("code",[t._v("obj.__proto__ = Con.prototype")])])]),t._v(" "),a("li",[a("p",[t._v("绑定"),a("strong",[t._v("this")]),t._v(": "),a("code",[t._v("apply")])])]),t._v(" "),a("li",[a("p",[t._v("返回新对象(如果构造函数有自己 "),a("strong",[t._v("retrun")]),t._v(" 时，则返回该值)")])])]),t._v(" "),a("h2",{attrs:{id:"_11-instanceof原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-instanceof原理"}},[t._v("#")]),t._v(" "),a("strong",[t._v("11.instanceof原理")])]),t._v(" "),a("p",[t._v("能在实例的 "),a("strong",[t._v("原型对象链")]),t._v(" 中找到该构造函数的"),a("code",[t._v("prototype")]),t._v("属性所指向的 "),a("strong",[t._v("原型对象")]),t._v("，就返回"),a("code",[t._v("true")]),t._v("。即:")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// __proto__: 代表原型对象链")]),t._v("\ninstance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("__proto__"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// return true")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h2",{attrs:{id:"_12-代码的复用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-代码的复用"}},[t._v("#")]),t._v(" "),a("strong",[t._v("12.代码的复用")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("函数封装")])]),t._v(" "),a("li",[a("p",[t._v("继承")])]),t._v(" "),a("li",[a("p",[t._v("复制"),a("code",[t._v("extend")])])]),t._v(" "),a("li",[a("p",[t._v("混入"),a("code",[t._v("mixin")])])]),t._v(" "),a("li",[a("p",[t._v("借用"),a("code",[t._v("apply/call")])])])]),t._v(" "),a("h2",{attrs:{id:"_13-继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-继承"}},[t._v("#")]),t._v(" "),a("strong",[t._v("13.继承")])]),t._v(" "),a("p",[t._v("在 JS 中，继承通常指的便是 "),a("strong",[t._v("原型链继承")]),t._v("，也就是通过指定原型，并可以通过原型链继承原型上的属性或者方法。")]),t._v(" "),a("ul",[a("li",[t._v("最优化: "),a("strong",[t._v("圣杯模式")])])]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" inherit "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("F")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("F")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("F")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("uber "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("ul",[a("li",[t._v("使用 ES6 的语法糖 "),a("code",[t._v("class / extends")])])]),t._v(" "),a("h2",{attrs:{id:"_14-类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14-类型转换"}},[t._v("#")]),t._v(" "),a("strong",[t._v("14.类型转换")])]),t._v(" "),a("p",[t._v("大家都知道 JS 中在使用运算符号或者对比符时，会自带隐式转换，规则如下:")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("-、*、/、% ：一律转换成数值后计算")])]),t._v(" "),a("li",[a("p",[t._v("+：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("数字 + 字符串 = 字符串， 运算顺序是从左到右")])]),t._v(" "),a("li",[a("p",[t._v("数字 + 对象， 优先调用对象的"),a("code",[t._v("valueOf")]),t._v(" -> "),a("code",[t._v("toString")])])]),t._v(" "),a("li",[a("p",[t._v("数字 + "),a("code",[t._v("boolean/null")]),t._v(" -> 数字")])]),t._v(" "),a("li",[a("p",[t._v("数字 + "),a("code",[t._v("undefined")]),t._v(" -> "),a("code",[t._v("NaN")])])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("[1].toString() === '1'")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("{}.toString() === '[object object]'")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("NaN !== NaN")]),t._v(" 、"),a("code",[t._v("+undefined")]),t._v(" 为 NaN")])])]),t._v(" "),a("h2",{attrs:{id:"_15-模块化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_15-模块化"}},[t._v("#")]),t._v(" "),a("strong",[t._v("15.模块化")])]),t._v(" "),a("p",[t._v("模块化开发在现代开发中已是必不可少的一部分，它大大提高了项目的可维护、可拓展和可协作性。通常， "),a("strong",[t._v("在浏览器中使用 ES6 的模块化支持，在 Node 中使用 commonjs 的模块化支持")]),t._v("。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("分类:")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("es6: "),a("code",[t._v("import/export")])])]),t._v(" "),a("li",[a("p",[t._v("commonjs: "),a("code",[t._v("require/module.exports/exports")])])]),t._v(" "),a("li",[a("p",[t._v("amd: "),a("code",[t._v("require/defined")])])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("require")]),t._v("与"),a("code",[t._v("import")]),t._v("的区别")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("require")]),t._v("支持 "),a("strong",[t._v("动态导入")]),t._v("，"),a("code",[t._v("import")]),t._v("不支持，正在提案 (babel 下可支持)")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("require")]),t._v("是 "),a("strong",[t._v("同步")]),t._v(" 导入，"),a("code",[t._v("import")]),t._v("属于 "),a("strong",[t._v("异步")]),t._v(" 导入")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("require")]),t._v("是 "),a("strong",[t._v("值拷贝")]),t._v("，导出值变化不会影响导入值；"),a("code",[t._v("import")]),t._v("指向 "),a("strong",[t._v("内存地址")]),t._v("，导入值会随导出值而变化")])])])])]),t._v(" "),a("h2",{attrs:{id:"_16-函数执行改变this"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_16-函数执行改变this"}},[t._v("#")]),t._v(" "),a("strong",[t._v("16. 函数执行改变this")])]),t._v(" "),a("p",[t._v("由于 JS 的设计原理: 在函数中，可以引用运行环境中的变量。因此就需要一个机制来让可以在函数体内部获取当前的运行环境，这便是"),a("code",[t._v("this")]),t._v("。")]),t._v(" "),a("p",[t._v("因此要明白 "),a("code",[t._v("this")]),t._v(" 指向，其实就是要搞清楚 函数的运行环境，说人话就是，谁调用了函数。例如:")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("obj.fn()")]),t._v("，便是 "),a("code",[t._v("obj")]),t._v(" 调用了函数，既函数中的 "),a("code",[t._v("this === obj")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("fn()")]),t._v("，这里可以看成 "),a("code",[t._v("window.fn()")]),t._v("，因此 "),a("code",[t._v("this === window")])])])]),t._v(" "),a("p",[t._v("但这种机制并不完全能满足的业务需求，因此提供了三种方式可以手动修改 "),a("code",[t._v("this")]),t._v(" 的指向:")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("call: fn.call(target, 1, 2)")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("apply: fn.apply(target, [1, 2])")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("bind: fn.bind(target)(1,2)")])])])]),t._v(" "),a("h2",{attrs:{id:"_17-es6-es7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_17-es6-es7"}},[t._v("#")]),t._v(" "),a("strong",[t._v("17. ES6/ES7")])]),t._v(" "),a("p",[t._v("由于 "),a("strong",[t._v("Babel")]),t._v(" 的强大和普及，现在 "),a("strong",[t._v("ES6/ES7")]),t._v(" 基本上已经是现代化开发的必备了。通过新的语法糖，能让代码整体更为简洁和易读。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("声明")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("let/const")]),t._v(": 块级作用域、不存在变量提升、暂时性死区、不允许重复声明")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("const")]),t._v(": 声明常量，无法修改")])])])]),t._v(" "),a("li",[a("p",[t._v("解构赋值")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("class/extend")]),t._v(": 类声明与继承")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Set/Map")]),t._v(": 新的数据结构")])]),t._v(" "),a("li",[a("p",[t._v("异步解决方案:")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("Promise")]),t._v("的使用与实现")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("generator")]),t._v(":")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("yield")]),t._v(": 暂停代码")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("next()")]),t._v(": 继续执行代码")])])])])])])]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("helloWorld")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'world'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ending'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" generator "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("helloWorld")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ngenerator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// { value: 'hello', done: false }")]),t._v("\n\ngenerator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// { value: 'world', done: false }")]),t._v("\n\ngenerator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// { value: 'ending', done: true }")]),t._v("\n\ngenerator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// { value: undefined, done: true }")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br")])]),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("* `await/async`: 是`generator`的语法糖， babel中是基于`promise`实现。\n")])])]),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getUserByAsync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" user "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fetchUser")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" user "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getUserByAsync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h2",{attrs:{id:"_18-ast"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_18-ast"}},[t._v("#")]),t._v(" "),a("strong",[t._v("18. AST")])]),t._v(" "),a("p",[a("strong",[t._v("抽象语法树 (Abstract Syntax Tree)")]),t._v("，是将代码逐字母解析成 "),a("strong",[t._v("树状对象")]),t._v(" 的形式。这是语言之间的转换、代码语法检查，代码风格检查，代码格式化，代码高亮，代码错误提示，代码自动补全等等的基础。例如:")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("square")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("通过解析转化成的"),a("code",[t._v("AST")]),t._v("如下图:")]),t._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"AST流程图",href:"/notes/assets/168e9d95910dd187.png"}},[a("img",{attrs:{src:"/notes/assets/168e9d95910dd187.png",alt:"AST流程图"}})])]),t._v(" "),a("h2",{attrs:{id:"_19-babel编译原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19-babel编译原理"}},[t._v("#")]),t._v(" "),a("strong",[t._v("19. babel编译原理")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("babylon 将 ES6/ES7 代码解析成 AST")])]),t._v(" "),a("li",[a("p",[t._v("babel-traverse 对 AST 进行遍历转译，得到新的 AST")])]),t._v(" "),a("li",[a("p",[t._v("新 AST 通过 babel-generator 转换成 ES5")])])]),t._v(" "),a("h2",{attrs:{id:"_20-函数柯里化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_20-函数柯里化"}},[t._v("#")]),t._v(" "),a("strong",[t._v("20. 函数柯里化")])]),t._v(" "),a("p",[t._v("在一个函数中，首先填充几个参数，然后再返回一个新的函数的技术，称为函数的柯里化。通常可用于在不侵入函数的前提下，为函数 "),a("strong",[t._v("预置通用参数")]),t._v("，供多次重复调用。")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("y")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" y\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" add1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("h2",{attrs:{id:"_21-数组-array"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_21-数组-array"}},[t._v("#")]),t._v(" "),a("strong",[t._v("21. 数组(array)")])]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("map")]),t._v(": 遍历数组，返回回调返回值组成的新数组")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("forEach")]),t._v(": 无法"),a("code",[t._v("break")]),t._v("，可以用"),a("code",[t._v("try/catch")]),t._v("中"),a("code",[t._v("throw new Error")]),t._v("来停止")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("filter")]),t._v(": 过滤")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("some")]),t._v(": 有一项返回"),a("code",[t._v("true")]),t._v("，则整体为"),a("code",[t._v("true")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("every")]),t._v(": 有一项返回"),a("code",[t._v("false")]),t._v("，则整体为"),a("code",[t._v("false")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("join")]),t._v(": 通过指定连接符生成字符串")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("push / pop")]),t._v(": 末尾推入和弹出，改变原数组， "),a("code",[t._v("push")]),t._v(" 返回数组长度, "),a("code",[t._v("pop")]),t._v(" 返回原数组最后一项；")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("unshift / shift")]),t._v(": 头部推入和弹出，改变原数组，"),a("code",[t._v("unshift")]),t._v(" 返回数组长度，"),a("code",[t._v("shift")]),t._v(" 返回原数组第一项 ；")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("sort(fn) / reverse")]),t._v(": 排序与反转，改变原数组")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("concat")]),t._v(": 连接数组，不影响原数组， 浅拷贝")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("slice(start, end)")]),t._v(": 返回截断后的新数组，不改变原数组")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("splice(start, number, value...)")]),t._v(": 返回删除元素组成的数组，"),a("code",[t._v("value")]),t._v(" 为插入项，改变原数组")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("indexOf / lastIndexOf(value, fromIndex)")]),t._v(": 查找数组项，返回对应的下标")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("reduce / reduceRight(fn(prev, cur)， defaultPrev)")]),t._v(": 两两执行，"),a("code",[t._v("prev")]),t._v(" 为上次化简函数的"),a("code",[t._v("return")]),t._v("值，"),a("code",[t._v("cur")]),t._v(" 为当前值")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("当传入 "),a("code",[t._v("defaultPrev")]),t._v(" 时，从第一项开始；")])]),t._v(" "),a("li",[a("p",[t._v("当未传入时，则为第二项")])])])]),t._v(" "),a("li",[a("p",[t._v("数组乱序：")])])]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\narr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("random")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("ul",[a("li",[t._v("数组拆解: flat: [1,[2,3]] --\x3e [1, 2, 3]")])]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("flat")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("','")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("item "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);